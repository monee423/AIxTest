# 公共配置文件
spring:
  application:
    name: springboot-init
  # 默认 dev 环境
  profiles:
    active: dev
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # session 配置
  session:
    # todo 取消注释开启分布式 session（须先配置 Redis）
    # store-type: redis
    # 30 天过期
    timeout: 2592000
  # 数据库配置
  # todo 需替换配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ai_test
    username: root
    password: 528491
  # Redis 配置
  # todo 需替换配置，然后取消注释
#  redis:
#    database: 1
#    host: localhost
#    port: 6379
#    timeout: 5000
#    password: 123456
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: 10MB
ark:
  api:
    key: b7fff3e7-e2dd-4658-94b9-ebcc735deb16
    model: ep-20240722015404-675mp
  base:
    url: https://ark.cn-beijing.volces.com/api/v3/
    chart-prompt: |
        任务描述：你是一位前端开发专家，你的任务是做数据转化，你可以将csv数据转化成"Echarts V5"的"option"配置对象的js代码，我会为你提供：需求描述、csv格式数据、数据描述、需要转化的图表类型。你需要根据我为你提供的输入转化成对应的Echarts的js代码。
        你的输出只需要包含Echarts V5 的option 配置对象js代码，不要输出其他任何无关信息,横坐标标签较多时，请使用"axisLabel: { rotate: 45 }"处理
        符号介绍：```表示我们约定的输入或输出格式，我的输入与你的输出会被包含其中，符号本身不参与输入输出、"表示我输入内容的变量、返回时直接返回无格式的纯文本即可
        
        下面是一条问答案例：
        输入：```
        需求描述：
        "选择'缺陷总数、已修复总数'进行转化"
        数据描述：
        "测试功能缺陷统计情况"
        图表类型：
        "柱状图"
        csv数据：
        "
              功能缺陷,缺陷总数,严重缺陷数,严重缺陷修复数,已修复总数
              用户注册,8,2,1,7
              用户信息修改,5,1,1,4
              用户注销,3,0,0,3
              数据导入,4,0,0,3
              数据导出,3,0,0,2
              报表生成,5,1,1,4
              图表展示,4,0,0,3
              权限管理,6,0,0,5
              通知设置,3,0,0,2
              任务管理,7,1,1,6
              日程安排,5,0,0,4
              邮件发送,4,0,0,3
              "
        ```
        输出：```
        option = {
        xAxis: {
          type: 'category',
          data: ['用户注册', '用户信息修改', '用户注销', '数据导入', '数据导出', '报表生成', '图表展示', '权限管理', '通知设置', '任务管理', '日程安排', '邮件发送']
        },
        yAxis: {
          type: 'value'
        },
        series: [
          {
            name: '缺陷总数',
            type: 'bar',
            data: [8, 5, 3, 4, 3, 5, 4, 6, 3, 7, 5, 4]
          },
          {
            name: '已修复总数',
            type: 'bar',
            data: [7, 4, 3, 3, 2, 4, 3, 5, 2, 6, 4, 3]
          }
        ]
        };
        ```
    analysis-prompt: |
      请你对这些缺陷统计数据进行整体性的分析，得出有价值的精简的结论。下面是一段示例输入输出，你需要根据输出格式进行回答。
      示例：
      输入：
        缺陷功能:['用户注册', '用户信息修改', '用户注销', '数据导入', '数据导出', '报表生成', '图表展示', '权限管理', '通知设置', '任务管理', '日程安排', '邮件发送'],
        缺陷总数:[8, 5, 3, 4, 3, 5, 4, 6, 3, 7, 5, 4]
        已修复数:[7, 4, 3, 3, 2, 4, 3, 5, 2, 6, 4, 3]
      输出：
      - 整体分析：各功能模块均存在一定数量的缺陷，但已修复数占比较高，说明开发团队修复缺陷较为积极。
      - 缺陷总数：用户注册和任务管理模块的缺陷总数相对较多，分别为 8 和 7；用户注销、数据导入、数据导出、图表展示、通知设置、邮件发送等模块的缺陷总数相对较少，在 3 或 4。
      - 已修复数：可以看出各模块修复率都较高，团队修复比较积极。


server:
  address: 0.0.0.0
  port: 8101
  servlet:
    context-path: /
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.henry.springbootinit.controller
